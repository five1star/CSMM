{
	"id": "28b6933498a67bbfbff985fd631a0853",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CsmmExchange.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\ncontract CsmmExchange {\n    IERC20 public token;\n\n    constructor(IERC20 _token){\n        token = _token;\n    }\n\n    function addLiquidity(uint256 _tokenAmount) public payable {\n        token.transferFrom(msg.sender, address(this), _tokenAmount);\n    }\n\n    function ethToTokenSwap() public payable {\n        uint256 outputAmount = msg.value;\n        token.transfer(msg.sender, outputAmount);\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CsmmExchange.sol": {
				"CsmmExchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenAmount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ethToTokenSwap",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CsmmExchange.sol\":116:517  contract CsmmExchange {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CsmmExchange.sol\":170:227  constructor(IERC20 _token){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CsmmExchange.sol\":214:220  _token */\n  dup1\n    /* \"contracts/CsmmExchange.sol\":206:211  token */\n  0x00\n  dup1\n    /* \"contracts/CsmmExchange.sol\":206:220  token = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CsmmExchange.sol\":170:227  constructor(IERC20 _token){... */\n  pop\n    /* \"contracts/CsmmExchange.sol\":116:517  contract CsmmExchange {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:176   */\ntag_8:\n    /* \"#utility.yul\":77:82   */\n  0x00\n    /* \"#utility.yul\":108:114   */\n  dup2\n    /* \"#utility.yul\":102:115   */\n  mload\n    /* \"#utility.yul\":93:115   */\n  swap1\n  pop\n    /* \"#utility.yul\":124:170   */\n  tag_10\n    /* \"#utility.yul\":164:169   */\n  dup2\n    /* \"#utility.yul\":124:170   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:176   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":182:559   */\ntag_3:\n    /* \"#utility.yul\":265:271   */\n  0x00\n    /* \"#utility.yul\":314:316   */\n  0x20\n    /* \"#utility.yul\":302:311   */\n  dup3\n    /* \"#utility.yul\":293:300   */\n  dup5\n    /* \"#utility.yul\":289:312   */\n  sub\n    /* \"#utility.yul\":285:317   */\n  slt\n    /* \"#utility.yul\":282:401   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":320:399   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":282:401   */\ntag_13:\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":465:542   */\n  tag_16\n    /* \"#utility.yul\":534:541   */\n  dup5\n    /* \"#utility.yul\":525:531   */\n  dup3\n    /* \"#utility.yul\":514:523   */\n  dup6\n    /* \"#utility.yul\":510:532   */\n  add\n    /* \"#utility.yul\":465:542   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":455:542   */\n  swap2\n  pop\n    /* \"#utility.yul\":411:552   */\n  pop\n    /* \"#utility.yul\":182:559   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":646:742   */\ntag_19:\n    /* \"#utility.yul\":683:690   */\n  0x00\n    /* \"#utility.yul\":712:736   */\n  tag_21\n    /* \"#utility.yul\":730:735   */\n  dup3\n    /* \"#utility.yul\":712:736   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":701:736   */\n  swap1\n  pop\n    /* \"#utility.yul\":646:742   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":748:857   */\ntag_23:\n    /* \"#utility.yul\":798:805   */\n  0x00\n    /* \"#utility.yul\":827:851   */\n  tag_25\n    /* \"#utility.yul\":845:850   */\n  dup3\n    /* \"#utility.yul\":827:851   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":816:851   */\n  swap1\n  pop\n    /* \"#utility.yul\":748:857   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":863:989   */\ntag_22:\n    /* \"#utility.yul\":900:907   */\n  0x00\n    /* \"#utility.yul\":940:982   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":933:938   */\n  dup3\n    /* \"#utility.yul\":929:983   */\n  and\n    /* \"#utility.yul\":918:983   */\n  swap1\n  pop\n    /* \"#utility.yul\":863:989   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1118:1235   */\ntag_15:\n    /* \"#utility.yul\":1227:1228   */\n  0x00\n    /* \"#utility.yul\":1224:1225   */\n  dup1\n    /* \"#utility.yul\":1217:1229   */\n  revert\n    /* \"#utility.yul\":1241:1389   */\ntag_11:\n    /* \"#utility.yul\":1327:1364   */\n  tag_31\n    /* \"#utility.yul\":1358:1363   */\n  dup2\n    /* \"#utility.yul\":1327:1364   */\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1320:1325   */\n  dup2\n    /* \"#utility.yul\":1317:1365   */\n  eq\n    /* \"#utility.yul\":1307:1383   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1379:1380   */\n  0x00\n    /* \"#utility.yul\":1376:1377   */\n  dup1\n    /* \"#utility.yul\":1369:1381   */\n  revert\n    /* \"#utility.yul\":1307:1383   */\ntag_32:\n    /* \"#utility.yul\":1241:1389   */\n  pop\n  jump\t// out\n    /* \"contracts/CsmmExchange.sol\":116:517  contract CsmmExchange {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CsmmExchange.sol\":116:517  contract CsmmExchange {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x51c6590a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xc1137e56\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CsmmExchange.sol\":233:368  function addLiquidity(uint256 _tokenAmount) public payable {... */\n    tag_2:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/CsmmExchange.sol\":374:514  function ethToTokenSwap() public payable {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/CsmmExchange.sol\":144:163  IERC20 public token */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CsmmExchange.sol\":233:368  function addLiquidity(uint256 _tokenAmount) public payable {... */\n    tag_8:\n        /* \"contracts/CsmmExchange.sol\":302:307  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CsmmExchange.sol\":302:320  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/CsmmExchange.sol\":321:331  msg.sender */\n      caller\n        /* \"contracts/CsmmExchange.sol\":341:345  this */\n      address\n        /* \"contracts/CsmmExchange.sol\":348:360  _tokenAmount */\n      dup5\n        /* \"contracts/CsmmExchange.sol\":302:361  token.transferFrom(msg.sender, address(this), _tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      pop\n        /* \"contracts/CsmmExchange.sol\":233:368  function addLiquidity(uint256 _tokenAmount) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/CsmmExchange.sol\":374:514  function ethToTokenSwap() public payable {... */\n    tag_10:\n        /* \"contracts/CsmmExchange.sol\":425:445  uint256 outputAmount */\n      0x00\n        /* \"contracts/CsmmExchange.sol\":448:457  msg.value */\n      callvalue\n        /* \"contracts/CsmmExchange.sol\":425:457  uint256 outputAmount = msg.value */\n      swap1\n      pop\n        /* \"contracts/CsmmExchange.sol\":467:472  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CsmmExchange.sol\":467:481  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/CsmmExchange.sol\":482:492  msg.sender */\n      caller\n        /* \"contracts/CsmmExchange.sol\":494:506  outputAmount */\n      dup4\n        /* \"contracts/CsmmExchange.sol\":467:507  token.transfer(msg.sender, outputAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_30:\n      pop\n        /* \"contracts/CsmmExchange.sol\":415:514  {... */\n      pop\n        /* \"contracts/CsmmExchange.sol\":374:514  function ethToTokenSwap() public payable {... */\n      jump\t// out\n        /* \"contracts/CsmmExchange.sol\":144:163  IERC20 public token */\n    tag_13:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_32:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_34\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:289   */\n    tag_36:\n        /* \"#utility.yul\":196:201   */\n      0x00\n        /* \"#utility.yul\":234:240   */\n      dup2\n        /* \"#utility.yul\":221:241   */\n      calldataload\n        /* \"#utility.yul\":212:241   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:283   */\n      tag_38\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":250:283   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":150:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:640   */\n    tag_23:\n        /* \"#utility.yul\":362:368   */\n      0x00\n        /* \"#utility.yul\":411:413   */\n      0x20\n        /* \"#utility.yul\":399:408   */\n      dup3\n        /* \"#utility.yul\":390:397   */\n      dup5\n        /* \"#utility.yul\":386:409   */\n      sub\n        /* \"#utility.yul\":382:414   */\n      slt\n        /* \"#utility.yul\":379:498   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":417:496   */\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":379:498   */\n    tag_41:\n        /* \"#utility.yul\":537:538   */\n      0x00\n        /* \"#utility.yul\":562:623   */\n      tag_44\n        /* \"#utility.yul\":615:622   */\n      dup5\n        /* \"#utility.yul\":606:612   */\n      dup3\n        /* \"#utility.yul\":595:604   */\n      dup6\n        /* \"#utility.yul\":591:613   */\n      add\n        /* \"#utility.yul\":562:623   */\n      tag_32\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":552:623   */\n      swap2\n      pop\n        /* \"#utility.yul\":508:633   */\n      pop\n        /* \"#utility.yul\":295:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":646:975   */\n    tag_7:\n        /* \"#utility.yul\":705:711   */\n      0x00\n        /* \"#utility.yul\":754:756   */\n      0x20\n        /* \"#utility.yul\":742:751   */\n      dup3\n        /* \"#utility.yul\":733:740   */\n      dup5\n        /* \"#utility.yul\":729:752   */\n      sub\n        /* \"#utility.yul\":725:757   */\n      slt\n        /* \"#utility.yul\":722:841   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":760:839   */\n      tag_47\n      tag_43\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":722:841   */\n    tag_46:\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":905:958   */\n      tag_48\n        /* \"#utility.yul\":950:957   */\n      dup5\n        /* \"#utility.yul\":941:947   */\n      dup3\n        /* \"#utility.yul\":930:939   */\n      dup6\n        /* \"#utility.yul\":926:948   */\n      add\n        /* \"#utility.yul\":905:958   */\n      tag_36\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":895:958   */\n      swap2\n      pop\n        /* \"#utility.yul\":851:968   */\n      pop\n        /* \"#utility.yul\":646:975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":981:1099   */\n    tag_49:\n        /* \"#utility.yul\":1068:1092   */\n      tag_51\n        /* \"#utility.yul\":1086:1091   */\n      dup2\n        /* \"#utility.yul\":1068:1092   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1063:1066   */\n      dup3\n        /* \"#utility.yul\":1056:1093   */\n      mstore\n        /* \"#utility.yul\":981:1099   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1105:1262   */\n    tag_53:\n        /* \"#utility.yul\":1205:1255   */\n      tag_55\n        /* \"#utility.yul\":1249:1254   */\n      dup2\n        /* \"#utility.yul\":1205:1255   */\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1200:1203   */\n      dup3\n        /* \"#utility.yul\":1193:1256   */\n      mstore\n        /* \"#utility.yul\":1105:1262   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1268:1386   */\n    tag_57:\n        /* \"#utility.yul\":1355:1379   */\n      tag_59\n        /* \"#utility.yul\":1373:1378   */\n      dup2\n        /* \"#utility.yul\":1355:1379   */\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1350:1353   */\n      dup3\n        /* \"#utility.yul\":1343:1380   */\n      mstore\n        /* \"#utility.yul\":1268:1386   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1392:1834   */\n    tag_18:\n        /* \"#utility.yul\":1541:1545   */\n      0x00\n        /* \"#utility.yul\":1579:1581   */\n      0x60\n        /* \"#utility.yul\":1568:1577   */\n      dup3\n        /* \"#utility.yul\":1564:1582   */\n      add\n        /* \"#utility.yul\":1556:1582   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1663   */\n      tag_62\n        /* \"#utility.yul\":1660:1661   */\n      0x00\n        /* \"#utility.yul\":1649:1658   */\n      dup4\n        /* \"#utility.yul\":1645:1662   */\n      add\n        /* \"#utility.yul\":1636:1642   */\n      dup7\n        /* \"#utility.yul\":1592:1663   */\n      tag_49\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1673:1745   */\n      tag_63\n        /* \"#utility.yul\":1741:1743   */\n      0x20\n        /* \"#utility.yul\":1730:1739   */\n      dup4\n        /* \"#utility.yul\":1726:1744   */\n      add\n        /* \"#utility.yul\":1717:1723   */\n      dup6\n        /* \"#utility.yul\":1673:1745   */\n      tag_49\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1755:1827   */\n      tag_64\n        /* \"#utility.yul\":1823:1825   */\n      0x40\n        /* \"#utility.yul\":1812:1821   */\n      dup4\n        /* \"#utility.yul\":1808:1826   */\n      add\n        /* \"#utility.yul\":1799:1805   */\n      dup5\n        /* \"#utility.yul\":1755:1827   */\n      tag_57\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1392:1834   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1840:2172   */\n    tag_26:\n        /* \"#utility.yul\":1961:1965   */\n      0x00\n        /* \"#utility.yul\":1999:2001   */\n      0x40\n        /* \"#utility.yul\":1988:1997   */\n      dup3\n        /* \"#utility.yul\":1984:2002   */\n      add\n        /* \"#utility.yul\":1976:2002   */\n      swap1\n      pop\n        /* \"#utility.yul\":2012:2083   */\n      tag_66\n        /* \"#utility.yul\":2080:2081   */\n      0x00\n        /* \"#utility.yul\":2069:2078   */\n      dup4\n        /* \"#utility.yul\":2065:2082   */\n      add\n        /* \"#utility.yul\":2056:2062   */\n      dup6\n        /* \"#utility.yul\":2012:2083   */\n      tag_49\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2093:2165   */\n      tag_67\n        /* \"#utility.yul\":2161:2163   */\n      0x20\n        /* \"#utility.yul\":2150:2159   */\n      dup4\n        /* \"#utility.yul\":2146:2164   */\n      add\n        /* \"#utility.yul\":2137:2143   */\n      dup5\n        /* \"#utility.yul\":2093:2165   */\n      tag_57\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1840:2172   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2178:2426   */\n    tag_15:\n        /* \"#utility.yul\":2284:2288   */\n      0x00\n        /* \"#utility.yul\":2322:2324   */\n      0x20\n        /* \"#utility.yul\":2311:2320   */\n      dup3\n        /* \"#utility.yul\":2307:2325   */\n      add\n        /* \"#utility.yul\":2299:2325   */\n      swap1\n      pop\n        /* \"#utility.yul\":2335:2419   */\n      tag_69\n        /* \"#utility.yul\":2416:2417   */\n      0x00\n        /* \"#utility.yul\":2405:2414   */\n      dup4\n        /* \"#utility.yul\":2401:2418   */\n      add\n        /* \"#utility.yul\":2392:2398   */\n      dup5\n        /* \"#utility.yul\":2335:2419   */\n      tag_53\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2178:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2513:2609   */\n    tag_52:\n        /* \"#utility.yul\":2550:2557   */\n      0x00\n        /* \"#utility.yul\":2579:2603   */\n      tag_73\n        /* \"#utility.yul\":2597:2602   */\n      dup3\n        /* \"#utility.yul\":2579:2603   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2568:2603   */\n      swap1\n      pop\n        /* \"#utility.yul\":2513:2609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2615:2705   */\n    tag_75:\n        /* \"#utility.yul\":2649:2656   */\n      0x00\n        /* \"#utility.yul\":2692:2697   */\n      dup2\n        /* \"#utility.yul\":2685:2698   */\n      iszero\n        /* \"#utility.yul\":2678:2699   */\n      iszero\n        /* \"#utility.yul\":2667:2699   */\n      swap1\n      pop\n        /* \"#utility.yul\":2615:2705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2837   */\n    tag_74:\n        /* \"#utility.yul\":2748:2755   */\n      0x00\n        /* \"#utility.yul\":2788:2830   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2781:2786   */\n      dup3\n        /* \"#utility.yul\":2777:2831   */\n      and\n        /* \"#utility.yul\":2766:2831   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2843:2920   */\n    tag_60:\n        /* \"#utility.yul\":2880:2887   */\n      0x00\n        /* \"#utility.yul\":2909:2914   */\n      dup2\n        /* \"#utility.yul\":2898:2914   */\n      swap1\n      pop\n        /* \"#utility.yul\":2843:2920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2926:3065   */\n    tag_56:\n        /* \"#utility.yul\":2989:2998   */\n      0x00\n        /* \"#utility.yul\":3022:3059   */\n      tag_80\n        /* \"#utility.yul\":3053:3058   */\n      dup3\n        /* \"#utility.yul\":3022:3059   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3009:3059   */\n      swap1\n      pop\n        /* \"#utility.yul\":2926:3065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3197   */\n    tag_81:\n        /* \"#utility.yul\":3121:3130   */\n      0x00\n        /* \"#utility.yul\":3154:3191   */\n      tag_83\n        /* \"#utility.yul\":3185:3190   */\n      dup3\n        /* \"#utility.yul\":3154:3191   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3141:3191   */\n      swap1\n      pop\n        /* \"#utility.yul\":3071:3197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3203:3316   */\n    tag_84:\n        /* \"#utility.yul\":3253:3262   */\n      0x00\n        /* \"#utility.yul\":3286:3310   */\n      tag_86\n        /* \"#utility.yul\":3304:3309   */\n      dup3\n        /* \"#utility.yul\":3286:3310   */\n      tag_74\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3273:3310   */\n      swap1\n      pop\n        /* \"#utility.yul\":3203:3316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3445:3562   */\n    tag_43:\n        /* \"#utility.yul\":3554:3555   */\n      0x00\n        /* \"#utility.yul\":3551:3552   */\n      dup1\n        /* \"#utility.yul\":3544:3556   */\n      revert\n        /* \"#utility.yul\":3568:3684   */\n    tag_35:\n        /* \"#utility.yul\":3638:3659   */\n      tag_91\n        /* \"#utility.yul\":3653:3658   */\n      dup2\n        /* \"#utility.yul\":3638:3659   */\n      tag_75\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3631:3636   */\n      dup2\n        /* \"#utility.yul\":3628:3660   */\n      eq\n        /* \"#utility.yul\":3618:3678   */\n      tag_92\n      jumpi\n        /* \"#utility.yul\":3674:3675   */\n      0x00\n        /* \"#utility.yul\":3671:3672   */\n      dup1\n        /* \"#utility.yul\":3664:3676   */\n      revert\n        /* \"#utility.yul\":3618:3678   */\n    tag_92:\n        /* \"#utility.yul\":3568:3684   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3690:3812   */\n    tag_39:\n        /* \"#utility.yul\":3763:3787   */\n      tag_94\n        /* \"#utility.yul\":3781:3786   */\n      dup2\n        /* \"#utility.yul\":3763:3787   */\n      tag_60\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3756:3761   */\n      dup2\n        /* \"#utility.yul\":3753:3788   */\n      eq\n        /* \"#utility.yul\":3743:3806   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":3802:3803   */\n      0x00\n        /* \"#utility.yul\":3799:3800   */\n      dup1\n        /* \"#utility.yul\":3792:3804   */\n      revert\n        /* \"#utility.yul\":3743:3806   */\n    tag_95:\n        /* \"#utility.yul\":3690:3812   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205329175ff375f7a13ba6f4628be88336acbc5faaf537cae5a4b92ce3a86c3ae664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_94": {
									"entryPoint": null,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$77": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$77": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1392:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:93:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "93:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "108:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "102:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "102:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "164:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$77",
																	"nodeType": "YulIdentifier",
																	"src": "124:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "124:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "124:46:2"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "61:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "69:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "77:5:2",
														"type": ""
													}
												],
												"src": "7:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "272:287:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "318:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "320:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "320:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "320:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "293:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "302:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "289:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "289:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "314:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "285:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "285:32:2"
															},
															"nodeType": "YulIf",
															"src": "282:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "411:141:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "426:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "430:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "455:87:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "465:44:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "465:77:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "455:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$77_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "242:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "253:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "265:6:2",
														"type": ""
													}
												],
												"src": "182:377:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "605:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "615:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "631:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "625:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "598:6:2",
														"type": ""
													}
												],
												"src": "565:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "691:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "701:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "730:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "712:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "701:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "673:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "683:7:2",
														"type": ""
													}
												],
												"src": "646:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "806:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "816:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "845:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "827:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "816:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "788:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "798:7:2",
														"type": ""
													}
												],
												"src": "748:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "908:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "918:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "933:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "940:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "929:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "918:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "890:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "900:7:2",
														"type": ""
													}
												],
												"src": "863:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1084:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1101:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1104:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1094:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1094:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "995:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1207:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1224:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1227:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1217:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1217:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1118:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:92:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1367:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1376:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1379:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1369:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1369:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1369:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1320:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1358:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$77",
																					"nodeType": "YulIdentifier",
																					"src": "1327:30:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1327:37:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1317:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1317:48:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:56:2"
															},
															"nodeType": "YulIf",
															"src": "1307:76:2"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1290:5:2",
														"type": ""
													}
												],
												"src": "1241:148:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$77_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105533803806105538339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b60008151905061008781610103565b92915050565b6000602082840312156100a3576100a26100fe565b5b60006100b184828501610078565b91505092915050565b60006100c5826100de565b9050919050565b60006100d7826100ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61010c816100cc565b811461011757600080fd5b50565b61042a806101296000396000f3fe6080604052600436106100345760003560e01c806351c6590a14610039578063c1137e5614610055578063fc0c546a1461005f575b600080fd5b610053600480360381019061004e919061026e565b61008a565b005b61005d61013d565b005b34801561006b57600080fd5b506100746101f3565b6040516100819190610328565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100e7939291906102c8565b602060405180830381600087803b15801561010157600080fd5b505af1158015610115573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101399190610241565b5050565b600034905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161019d9291906102ff565b602060405180830381600087803b1580156101b757600080fd5b505af11580156101cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ef9190610241565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081519050610226816103c6565b92915050565b60008135905061023b816103dd565b92915050565b600060208284031215610257576102566103c1565b5b600061026584828501610217565b91505092915050565b600060208284031215610284576102836103c1565b5b60006102928482850161022c565b91505092915050565b6102a481610343565b82525050565b6102b38161038b565b82525050565b6102c281610381565b82525050565b60006060820190506102dd600083018661029b565b6102ea602083018561029b565b6102f760408301846102b9565b949350505050565b6000604082019050610314600083018561029b565b61032160208301846102b9565b9392505050565b600060208201905061033d60008301846102aa565b92915050565b600061034e82610361565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103968261039d565b9050919050565b60006103a8826103af565b9050919050565b60006103ba82610361565b9050919050565b600080fd5b6103cf81610355565b81146103da57600080fd5b50565b6103e681610381565b81146103f157600080fd5b5056fea26469706673582212205329175ff375f7a13ba6f4628be88336acbc5faaf537cae5a4b92ce3a86c3ae664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x553 CODESIZE SUB DUP1 PUSH2 0x553 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0xFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1 DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5 DUP3 PUSH2 0xDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7 DUP3 PUSH2 0xBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C DUP2 PUSH2 0xCC JUMP JUMPDEST DUP2 EQ PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x42A DUP1 PUSH2 0x129 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51C6590A EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xC1137E56 EQ PUSH2 0x55 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E SWAP2 SWAP1 PUSH2 0x26E JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D PUSH2 0x13D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x74 PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x115 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x241 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D SWAP3 SWAP2 SWAP1 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x241 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x226 DUP2 PUSH2 0x3C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23B DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x257 JUMPI PUSH2 0x256 PUSH2 0x3C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x265 DUP5 DUP3 DUP6 ADD PUSH2 0x217 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x284 JUMPI PUSH2 0x283 PUSH2 0x3C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x292 DUP5 DUP3 DUP6 ADD PUSH2 0x22C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x343 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2B3 DUP2 PUSH2 0x38B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C2 DUP2 PUSH2 0x381 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x2EA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x2F7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x314 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x321 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E DUP3 PUSH2 0x361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396 DUP3 PUSH2 0x39D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A8 DUP3 PUSH2 0x3AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA DUP3 PUSH2 0x361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CF DUP2 PUSH2 0x355 JUMP JUMPDEST DUP2 EQ PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x381 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0x29 OR 0x5F RETURN PUSH22 0xF7A13BA6F4628BE88336ACBC5FAAF537CAE5A4B92CE3 0xA8 PUSH13 0x3AE664736F6C63430008070033 ",
							"sourceMap": "116:401:1:-:0;;;170:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;214:6;206:5;;:14;;;;;;;;;;;;;;;;;;170:57;116:401;;7:169:2;77:5;108:6;102:13;93:22;;124:46;164:5;124:46;:::i;:::-;7:169;;;;:::o;182:377::-;265:6;314:2;302:9;293:7;289:23;285:32;282:119;;;320:79;;:::i;:::-;282:119;440:1;465:77;534:7;525:6;514:9;510:22;465:77;:::i;:::-;455:87;;411:141;182:377;;;;:::o;646:96::-;683:7;712:24;730:5;712:24;:::i;:::-;701:35;;646:96;;;:::o;748:109::-;798:7;827:24;845:5;827:24;:::i;:::-;816:35;;748:109;;;:::o;863:126::-;900:7;940:42;933:5;929:54;918:65;;863:126;;;:::o;1118:117::-;1227:1;1224;1217:12;1241:148;1327:37;1358:5;1327:37;:::i;:::-;1320:5;1317:48;1307:76;;1379:1;1376;1369:12;1307:76;1241:148;:::o;116:401:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addLiquidity_112": {
									"entryPoint": 138,
									"id": 112,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ethToTokenSwap_129": {
									"entryPoint": 317,
									"id": 129,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_83": {
									"entryPoint": 499,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3815:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "212:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "234:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "250:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "250:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "180:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "188:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:2",
														"type": ""
													}
												],
												"src": "150:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "369:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "417:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "417:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "390:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "399:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "386:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "386:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:32:2"
															},
															"nodeType": "YulIf",
															"src": "379:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "508:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "523:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "537:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "527:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "552:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "595:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "606:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "591:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "591:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "615:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "562:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "552:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "339:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "350:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "362:6:2",
														"type": ""
													}
												],
												"src": "295:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "712:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "758:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "760:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "760:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "760:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "733:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "742:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "729:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "725:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:32:2"
															},
															"nodeType": "YulIf",
															"src": "722:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "851:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "866:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "870:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "895:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "930:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "941:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "926:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "926:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "950:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "905:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "895:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "682:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "693:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "705:6:2",
														"type": ""
													}
												],
												"src": "646:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1063:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1086:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1068:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1068:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1056:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1056:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1056:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1034:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1041:3:2",
														"type": ""
													}
												],
												"src": "981:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:79:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1200:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1249:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1205:43:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:50:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:63:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:63:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1171:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1178:3:2",
														"type": ""
													}
												],
												"src": "1105:157:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1333:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1350:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1373:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1355:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1343:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1343:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1343:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1321:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1328:3:2",
														"type": ""
													}
												],
												"src": "1268:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1546:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1556:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1568:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1579:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1564:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1564:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1556:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1636:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1660:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1645:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1645:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1592:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1592:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1717:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1730:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1741:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1726:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1726:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1673:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1799:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1812:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1823:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1808:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1755:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1755:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1755:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1502:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1514:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1522:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1530:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1541:4:2",
														"type": ""
													}
												],
												"src": "1392:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1966:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1976:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1988:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1984:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1976:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2056:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2069:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2080:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2065:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2012:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2012:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2137:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2150:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2161:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2146:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2146:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2093:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2093:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1930:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1942:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1950:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1961:4:2",
														"type": ""
													}
												],
												"src": "1840:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2289:137:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2299:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2311:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2322:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2307:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2299:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2392:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2405:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2416:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2401:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2401:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2335:56:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:84:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2335:84:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2261:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2273:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2284:4:2",
														"type": ""
													}
												],
												"src": "2178:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2472:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2482:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2498:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2492:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2482:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2465:6:2",
														"type": ""
													}
												],
												"src": "2432:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2558:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2568:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2597:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2579:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2568:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2540:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2550:7:2",
														"type": ""
													}
												],
												"src": "2513:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2657:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2667:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2692:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2685:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2678:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2667:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2639:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2649:7:2",
														"type": ""
													}
												],
												"src": "2615:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2756:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2766:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2781:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2777:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2766:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2738:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2748:7:2",
														"type": ""
													}
												],
												"src": "2711:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2888:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2898:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2909:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2898:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2870:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2880:7:2",
														"type": ""
													}
												],
												"src": "2843:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2999:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3009:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3053:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3022:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3009:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2989:9:2",
														"type": ""
													}
												],
												"src": "2926:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3131:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3141:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3185:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3154:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3141:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3111:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3121:9:2",
														"type": ""
													}
												],
												"src": "3071:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3273:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3304:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3286:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3273:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3243:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3253:9:2",
														"type": ""
													}
												],
												"src": "3203:113:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3411:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3428:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3421:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3421:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3421:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3322:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3534:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3551:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3554:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3544:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3544:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3544:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3445:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3608:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3662:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3671:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3674:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3664:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3664:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3664:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3631:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3653:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3638:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3638:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3628:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3628:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3621:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3621:40:2"
															},
															"nodeType": "YulIf",
															"src": "3618:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3601:5:2",
														"type": ""
													}
												],
												"src": "3568:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3733:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3790:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3799:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3802:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3792:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3792:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3792:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3756:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3781:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3763:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3763:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3753:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3746:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3746:43:2"
															},
															"nodeType": "YulIf",
															"src": "3743:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3726:5:2",
														"type": ""
													}
												],
												"src": "3690:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c806351c6590a14610039578063c1137e5614610055578063fc0c546a1461005f575b600080fd5b610053600480360381019061004e919061026e565b61008a565b005b61005d61013d565b005b34801561006b57600080fd5b506100746101f3565b6040516100819190610328565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100e7939291906102c8565b602060405180830381600087803b15801561010157600080fd5b505af1158015610115573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101399190610241565b5050565b600034905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161019d9291906102ff565b602060405180830381600087803b1580156101b757600080fd5b505af11580156101cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ef9190610241565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081519050610226816103c6565b92915050565b60008135905061023b816103dd565b92915050565b600060208284031215610257576102566103c1565b5b600061026584828501610217565b91505092915050565b600060208284031215610284576102836103c1565b5b60006102928482850161022c565b91505092915050565b6102a481610343565b82525050565b6102b38161038b565b82525050565b6102c281610381565b82525050565b60006060820190506102dd600083018661029b565b6102ea602083018561029b565b6102f760408301846102b9565b949350505050565b6000604082019050610314600083018561029b565b61032160208301846102b9565b9392505050565b600060208201905061033d60008301846102aa565b92915050565b600061034e82610361565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103968261039d565b9050919050565b60006103a8826103af565b9050919050565b60006103ba82610361565b9050919050565b600080fd5b6103cf81610355565b81146103da57600080fd5b50565b6103e681610381565b81146103f157600080fd5b5056fea26469706673582212205329175ff375f7a13ba6f4628be88336acbc5faaf537cae5a4b92ce3a86c3ae664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51C6590A EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xC1137E56 EQ PUSH2 0x55 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E SWAP2 SWAP1 PUSH2 0x26E JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D PUSH2 0x13D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x74 PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x115 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x241 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D SWAP3 SWAP2 SWAP1 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x241 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x226 DUP2 PUSH2 0x3C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23B DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x257 JUMPI PUSH2 0x256 PUSH2 0x3C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x265 DUP5 DUP3 DUP6 ADD PUSH2 0x217 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x284 JUMPI PUSH2 0x283 PUSH2 0x3C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x292 DUP5 DUP3 DUP6 ADD PUSH2 0x22C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x343 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2B3 DUP2 PUSH2 0x38B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C2 DUP2 PUSH2 0x381 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x2EA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x2F7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x314 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x321 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E DUP3 PUSH2 0x361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396 DUP3 PUSH2 0x39D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A8 DUP3 PUSH2 0x3AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA DUP3 PUSH2 0x361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CF DUP2 PUSH2 0x355 JUMP JUMPDEST DUP2 EQ PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x381 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0x29 OR 0x5F RETURN PUSH22 0xF7A13BA6F4628BE88336ACBC5FAAF537CAE5A4B92CE3 0xA8 PUSH13 0x3AE664736F6C63430008070033 ",
							"sourceMap": "116:401:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;374:140;;;:::i;:::-;;144:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;233:135;302:5;;;;;;;;;;:18;;;321:10;341:4;348:12;302:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;233:135;:::o;374:140::-;425:20;448:9;425:32;;467:5;;;;;;;;;;:14;;;482:10;494:12;467:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;415:99;374:140::o;144:19::-;;;;;;;;;;;;:::o;7:137:2:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;150:139;;;;:::o;295:345::-;362:6;411:2;399:9;390:7;386:23;382:32;379:119;;;417:79;;:::i;:::-;379:119;537:1;562:61;615:7;606:6;595:9;591:22;562:61;:::i;:::-;552:71;;508:125;295:345;;;;:::o;646:329::-;705:6;754:2;742:9;733:7;729:23;725:32;722:119;;;760:79;;:::i;:::-;722:119;880:1;905:53;950:7;941:6;930:9;926:22;905:53;:::i;:::-;895:63;;851:117;646:329;;;;:::o;981:118::-;1068:24;1086:5;1068:24;:::i;:::-;1063:3;1056:37;981:118;;:::o;1105:157::-;1205:50;1249:5;1205:50;:::i;:::-;1200:3;1193:63;1105:157;;:::o;1268:118::-;1355:24;1373:5;1355:24;:::i;:::-;1350:3;1343:37;1268:118;;:::o;1392:442::-;1541:4;1579:2;1568:9;1564:18;1556:26;;1592:71;1660:1;1649:9;1645:17;1636:6;1592:71;:::i;:::-;1673:72;1741:2;1730:9;1726:18;1717:6;1673:72;:::i;:::-;1755;1823:2;1812:9;1808:18;1799:6;1755:72;:::i;:::-;1392:442;;;;;;:::o;1840:332::-;1961:4;1999:2;1988:9;1984:18;1976:26;;2012:71;2080:1;2069:9;2065:17;2056:6;2012:71;:::i;:::-;2093:72;2161:2;2150:9;2146:18;2137:6;2093:72;:::i;:::-;1840:332;;;;;:::o;2178:248::-;2284:4;2322:2;2311:9;2307:18;2299:26;;2335:84;2416:1;2405:9;2401:17;2392:6;2335:84;:::i;:::-;2178:248;;;;:::o;2513:96::-;2550:7;2579:24;2597:5;2579:24;:::i;:::-;2568:35;;2513:96;;;:::o;2615:90::-;2649:7;2692:5;2685:13;2678:21;2667:32;;2615:90;;;:::o;2711:126::-;2748:7;2788:42;2781:5;2777:54;2766:65;;2711:126;;;:::o;2843:77::-;2880:7;2909:5;2898:16;;2843:77;;;:::o;2926:139::-;2989:9;3022:37;3053:5;3022:37;:::i;:::-;3009:50;;2926:139;;;:::o;3071:126::-;3121:9;3154:37;3185:5;3154:37;:::i;:::-;3141:50;;3071:126;;;:::o;3203:113::-;3253:9;3286:24;3304:5;3286:24;:::i;:::-;3273:37;;3203:113;;;:::o;3445:117::-;3554:1;3551;3544:12;3568:116;3638:21;3653:5;3638:21;:::i;:::-;3631:5;3628:32;3618:60;;3674:1;3671;3664:12;3618:60;3568:116;:::o;3690:122::-;3763:24;3781:5;3763:24;:::i;:::-;3756:5;3753:35;3743:63;;3802:1;3799;3792:12;3743:63;3690:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "213200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256)": "infinite",
								"ethToTokenSwap()": "infinite",
								"token()": "2619"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 517,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 517,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 517,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 227,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 227,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 227,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 227,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 170,
									"end": 227,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 170,
									"end": 227,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 170,
									"end": 227,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 170,
									"end": 227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 214,
									"end": 220,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 206,
									"end": 211,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 211,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 206,
									"end": 220,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 206,
									"end": 220,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 206,
									"end": 220,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 206,
									"end": 220,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 170,
									"end": 227,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 116,
									"end": 517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 517,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 176,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 176,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 77,
									"end": 82,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 114,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 102,
									"end": 115,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 93,
									"end": 115,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 93,
									"end": 115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 124,
									"end": 170,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 164,
									"end": 169,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 124,
									"end": 170,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 124,
									"end": 170,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 124,
									"end": 170,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 124,
									"end": 170,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 176,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 176,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 176,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 182,
									"end": 559,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 182,
									"end": 559,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 265,
									"end": 271,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 316,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 302,
									"end": 311,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 293,
									"end": 300,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 289,
									"end": 312,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 285,
									"end": 317,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 282,
									"end": 401,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 282,
									"end": 401,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 282,
									"end": 401,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 320,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 320,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 320,
									"end": 399,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 320,
									"end": 399,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 320,
									"end": 399,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 282,
									"end": 401,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 282,
									"end": 401,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 542,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 534,
									"end": 541,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 525,
									"end": 531,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 514,
									"end": 523,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 510,
									"end": 532,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 465,
									"end": 542,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 465,
									"end": 542,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 465,
									"end": 542,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 465,
									"end": 542,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 455,
									"end": 542,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 455,
									"end": 542,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 411,
									"end": 552,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 182,
									"end": 559,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 182,
									"end": 559,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 182,
									"end": 559,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 182,
									"end": 559,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 182,
									"end": 559,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 646,
									"end": 742,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 646,
									"end": 742,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 683,
									"end": 690,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 736,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 730,
									"end": 735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 712,
									"end": 736,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 712,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 712,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 712,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 701,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 701,
									"end": 736,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 646,
									"end": 742,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 646,
									"end": 742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 646,
									"end": 742,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 646,
									"end": 742,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 748,
									"end": 857,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 748,
									"end": 857,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 798,
									"end": 805,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 845,
									"end": 850,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 827,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 827,
									"end": 851,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 827,
									"end": 851,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 816,
									"end": 851,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 816,
									"end": 851,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 857,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 748,
									"end": 857,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 748,
									"end": 857,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 857,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 863,
									"end": 989,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 863,
									"end": 989,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 900,
									"end": 907,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 933,
									"end": 938,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 929,
									"end": 983,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 918,
									"end": 983,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 918,
									"end": 983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 863,
									"end": 989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 863,
									"end": 989,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 863,
									"end": 989,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 863,
									"end": 989,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1118,
									"end": 1235,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1118,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1227,
									"end": 1228,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1224,
									"end": 1225,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1217,
									"end": 1229,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1389,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1241,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1327,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1358,
									"end": 1363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1327,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1327,
									"end": 1364,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1327,
									"end": 1364,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1327,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1320,
									"end": 1325,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1317,
									"end": 1365,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1307,
									"end": 1383,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1307,
									"end": 1383,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1379,
									"end": 1380,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1376,
									"end": 1377,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1369,
									"end": 1381,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1307,
									"end": 1383,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1307,
									"end": 1383,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1389,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1389,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 116,
									"end": 517,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 116,
									"end": 517,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 517,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 517,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 116,
									"end": 517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 517,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205329175ff375f7a13ba6f4628be88336acbc5faaf537cae5a4b92ce3a86c3ae664736f6c63430008070033",
									".code": [
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "51C6590A"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "C1137E56"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "FC0C546A"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 374,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 374,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 374,
											"end": 514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 374,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 374,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 514,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 302,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 307,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 302,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 302,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 302,
											"end": 320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 302,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 321,
											"end": 331,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 341,
											"end": 345,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 348,
											"end": 360,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 302,
											"end": 361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 302,
											"end": 361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 233,
											"end": 368,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 374,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 374,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 425,
											"end": 445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 457,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 425,
											"end": 457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 425,
											"end": 457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 472,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 467,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 467,
											"end": 481,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 467,
											"end": 481,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 467,
											"end": 481,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 482,
											"end": 492,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 494,
											"end": 506,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 467,
											"end": 507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 415,
											"end": 514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 514,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 144,
											"end": 163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 144,
											"end": 163,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 196,
											"end": 201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 221,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 390,
											"end": 397,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 537,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 615,
											"end": 622,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 595,
											"end": 604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 591,
											"end": 613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 552,
											"end": 623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 508,
											"end": 633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 705,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 733,
											"end": 740,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 729,
											"end": 752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 725,
											"end": 757,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 950,
											"end": 957,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 941,
											"end": 947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 895,
											"end": 958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 851,
											"end": 968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1105,
											"end": 1262,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1105,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1249,
											"end": 1254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1205,
											"end": 1255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1255,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1205,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1262,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1268,
											"end": 1386,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1268,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1355,
											"end": 1379,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1355,
											"end": 1379,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1355,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1350,
											"end": 1353,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1386,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1392,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1392,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1581,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1568,
											"end": 1577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1660,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1592,
											"end": 1663,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1663,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1592,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1741,
											"end": 1743,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1739,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1744,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1673,
											"end": 1745,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1673,
											"end": 1745,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1673,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1755,
											"end": 1827,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1827,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1755,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1834,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1834,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1834,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1840,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1840,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 1997,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2012,
											"end": 2083,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2012,
											"end": 2083,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2012,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2161,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2164,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2093,
											"end": 2165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2093,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2172,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2172,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2172,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2178,
											"end": 2426,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2178,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2284,
											"end": 2288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 2320,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2416,
											"end": 2417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2398,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2335,
											"end": 2419,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2335,
											"end": 2419,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2335,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2426,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2426,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2426,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2513,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2513,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2597,
											"end": 2602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2579,
											"end": 2603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2579,
											"end": 2603,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2579,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2609,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2615,
											"end": 2705,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2615,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2699,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2667,
											"end": 2699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2667,
											"end": 2699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2705,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2711,
											"end": 2837,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2711,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2831,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2837,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2837,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2843,
											"end": 2920,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2843,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2920,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2926,
											"end": 3065,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2926,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 2998,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3059,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3065,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3065,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3071,
											"end": 3197,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3071,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3154,
											"end": 3191,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3191,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3154,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3197,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3203,
											"end": 3316,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3203,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3304,
											"end": 3309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3310,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3316,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3316,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3445,
											"end": 3562,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3445,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3556,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3568,
											"end": 3684,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3568,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3653,
											"end": 3658,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3638,
											"end": 3659,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3638,
											"end": 3659,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3638,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3660,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3618,
											"end": 3678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3674,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3664,
											"end": 3676,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3678,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3618,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3568,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3568,
											"end": 3684,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3690,
											"end": 3812,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3690,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3781,
											"end": 3786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3763,
											"end": 3787,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3763,
											"end": 3787,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3763,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3788,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3743,
											"end": 3806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3800,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3743,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3690,
											"end": 3812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3690,
											"end": 3812,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addLiquidity(uint256)": "51c6590a",
							"ethToTokenSwap()": "c1137e56",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToTokenSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CsmmExchange.sol\":\"CsmmExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/CsmmExchange.sol\":{\"keccak256\":\"0xf1c28d070d41bc3bd06a11b6dbdaef5660f1d90e5d0f4c10338fb304d1aecaf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31d5b90f6c453ab218c3044b1c839aca04f74651df88cfd2d2ee959613bee066\",\"dweb:/ipfs/QmZiAxS6SNKACiXz3pBFgeFLDa7xvjjLdBHMw5CzX8nn1q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contracts/CsmmExchange.sol:CsmmExchange",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"contracts/CsmmExchange.sol": {
				"ast": {
					"absolutePath": "contracts/CsmmExchange.sol",
					"exportedSymbols": {
						"CsmmExchange": [
							130
						],
						"IERC20": [
							77
						]
					},
					"id": 131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 131,
							"sourceUnit": 78,
							"src": "57:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 130,
							"linearizedBaseContracts": [
								130
							],
							"name": "CsmmExchange",
							"nameLocation": "125:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 83,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "158:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 130,
									"src": "144:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "144:6:1"
										},
										"referencedDeclaration": 77,
										"src": "144:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "196:31:1",
										"statements": [
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "206:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 90,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "214:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "206:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "206:14:1"
											}
										]
									},
									"id": 94,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "189:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "182:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 85,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 84,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "182:6:1"
													},
													"referencedDeclaration": 77,
													"src": "182:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:15:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:0:1"
									},
									"scope": 130,
									"src": "170:57:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "292:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 102,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "321:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "321:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 106,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "341:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CsmmExchange_$130",
																		"typeString": "contract CsmmExchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CsmmExchange_$130",
																		"typeString": "contract CsmmExchange"
																	}
																],
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "333:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 104,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "333:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "333:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 108,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "348:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 99,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "302:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "302:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "302:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "302:59:1"
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "242:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "_tokenAmount",
												"nameLocation": "263:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "255:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:22:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:0:1"
									},
									"scope": 130,
									"src": "233:135:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "415:99:1",
										"statements": [
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"mutability": "mutable",
														"name": "outputAmount",
														"nameLocation": "433:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 128,
														"src": "425:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "425:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"expression": {
														"id": 117,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "448:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "448:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "425:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "482:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "482:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "outputAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "494:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 120,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "467:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "467:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "467:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "467:40:1"
											}
										]
									},
									"functionSelector": "c1137e56",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ethToTokenSwap",
									"nameLocation": "383:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "397:2:1"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:0:1"
									},
									"scope": 130,
									"src": "374:140:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 131,
							"src": "116:401:1",
							"usedErrors": []
						}
					],
					"src": "32:485:1"
				},
				"id": 1
			}
		}
	}
}